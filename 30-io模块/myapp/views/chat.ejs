<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title%></title>
    <script src="/javascripts/socketio.js"></script>
  </head>
  <body>
    <h1><%= title%></h1>
    <h1 id="username"></h1>
    <input type="text" id="text" />
    <input type="button" id="send" value="发送" />
    <select id="select">
      <!-- <option value="volvo">Volvo</option>
      <option value="audi">Audi</option> -->
    </select>
    <!-- 1.建立socket连接，带着token去，后端验证token，失效跳转login页，没有失效可以进入聊天室 -->
    <!-- 2.当每一个客户端上线连接时，实时显示所有连接的客户端列表 -->
    <!-- 3.下拉框选择是ALL还是某个用户，判断群聊还是私聊，群聊-所有的客户端都显示信息，私聊-仅接收方收到 -->
  </body>
  <script>
    const WebSocketType = {
      Error: 0, // 错误
      GroupList: 1, // 显示所有上线的用户列表
      GroupChat: 2, // 群聊
      SingleChat: 3, // 私聊
    };
    function createWebSocket(data, to) {
      return {
        data,
        to,
      };
    }

    const select = document.getElementById('select');
    const text = document.getElementById('text');
    const send = document.getElementById('send');
    const username = document.getElementById('username');
    username.innerHTML = localStorage.getItem('username');

    const socket = io(
      `ws://localhost:3000?token=${localStorage.getItem('token')}`
    );

    // 接收服务器的数据
    socket.on(WebSocketType.GroupChat, (msg) => {
      const user = msg.user ? msg.user : '广播';
      console.log(`${user}：${msg.data}`);
    });

    socket.on(WebSocketType.Error, () => {
      localStorage.removeItem('token');
      location.href = '/login';
    });

    socket.on(WebSocketType.GroupList, (msg) => {
      select.innerHTML = '';
      select.innerHTML =
        "<option value='all'>all</option>" +
        msg.data
          .map(
            (item) => `<option value=${item.username}>${item.username}</option>`
          )
          .join('');
    });

    socket.on(WebSocketType.SingleChat, (msg) => {
      console.log(`${msg.user}：${msg.data}`);
    });

    // 发送消息给服务器
    send.onclick = () => {
      if (select.value === 'all') {
        // 群发 发送消息
        socket.emit(WebSocketType.GroupChat, createWebSocket(text.value, null));
      } else {
        // 私聊
        socket.emit(
          WebSocketType.SingleChat,
          createWebSocket(text.value, select.value)
        );
      }
    };
  </script>
</html>
